# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-03-30 13:34
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdmissionBatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_year', models.IntegerField()),
                ('session', models.CharField(choices=[('Jan', 'Jan'), ('June', 'June')], max_length=4)),
                ('enrollment_prefix', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='App',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=65)),
                ('favicon', models.CharField(default='wpforms', max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='Approver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CommunicationAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Permanent', 'Permanent'), ('Correspondence', 'Correspondence')], editable=False, max_length=20)),
                ('address_line1', models.CharField(max_length=150)),
                ('address_line2', models.CharField(blank=True, default='', max_length=150, null=True)),
                ('city', models.CharField(max_length=100)),
                ('pincode', models.CharField(max_length=20)),
                ('district', models.CharField(choices=[('Adilabad', 'Adilabad'), ('Agar Malwa', 'Agar Malwa'), ('Agra', 'Agra'), ('Ahmedabad', 'Ahmedabad'), ('Ahmednagar', 'Ahmednagar'), ('Aizawl', 'Aizawl'), ('Ajmer', 'Ajmer'), ('Akola', 'Akola'), ('Alappuzha', 'Alappuzha'), ('Aligarh', 'Aligarh'), ('Alipurduar', 'Alipurduar'), ('Alirajpur', 'Alirajpur'), ('Allahabad', 'Allahabad'), ('Almora', 'Almora'), ('Alwar', 'Alwar'), ('Ambala', 'Ambala'), ('Ambedkar Nagar', 'Ambedkar Nagar'), ('Amethi (Chhatrapati Shahuji Maharaj Nagar)', 'Amethi (Chhatrapati Shahuji Maharaj Nagar)'), ('Amravati', 'Amravati'), ('Amreli', 'Amreli'), ('Amritsar', 'Amritsar'), ('Amroha (Jyotiba Phule Nagar)', 'Amroha (Jyotiba Phule Nagar)'), ('Anand', 'Anand'), ('Anantapur', 'Anantapur'), ('Anantnag', 'Anantnag'), ('Angul', 'Angul'), ('Anjaw', 'Anjaw'), ('Anuppur', 'Anuppur'), ('Araria', 'Araria'), ('Aravalli', 'Aravalli'), ('Ariyalur', 'Ariyalur'), ('Arwal', 'Arwal'), ('Ashok Nagar', 'Ashok Nagar'), ('Auraiya', 'Auraiya'), ('Aurangabad', 'Aurangabad'), ('Aurangabad', 'Aurangabad'), ('Azamgarh', 'Azamgarh'), ('Badgam', 'Badgam'), ('Bagalkot', 'Bagalkot'), ('Bageshwar', 'Bageshwar'), ('Bagpat', 'Bagpat'), ('Bahraich', 'Bahraich'), ('Baksa', 'Baksa'), ('Balaghat', 'Balaghat'), ('Balangir', 'Balangir'), ('Balasore', 'Balasore'), ('Ballia', 'Ballia'), ('Balod', 'Balod'), ('Baloda Bazar', 'Baloda Bazar'), ('Balrampur', 'Balrampur'), ('Balrampur', 'Balrampur'), ('Banaskantha', 'Banaskantha'), ('Banda', 'Banda'), ('Bandipora', 'Bandipora'), ('Bangalore Rural', 'Bangalore Rural'), ('Bangalore Urban', 'Bangalore Urban'), ('Banka', 'Banka'), ('Bankura', 'Bankura'), ('Banswara', 'Banswara'), ('Barabanki', 'Barabanki'), ('Baramulla', 'Baramulla'), ('Baran', 'Baran'), ('Bardhaman', 'Bardhaman'), ('Bareilly', 'Bareilly'), ('Bargarh (Baragarh)', 'Bargarh (Baragarh)'), ('Barmer', 'Barmer'), ('Barnala', 'Barnala'), ('Barpeta', 'Barpeta'), ('Barwani', 'Barwani'), ('Bastar', 'Bastar'), ('Basti', 'Basti'), ('Bathinda', 'Bathinda'), ('Beed', 'Beed'), ('Begusarai', 'Begusarai'), ('Belgaum', 'Belgaum'), ('Bellary', 'Bellary'), ('Bemetara', 'Bemetara'), ('Betul', 'Betul'), ('Bhadrak', 'Bhadrak'), ('Bhagalpur', 'Bhagalpur'), ('Bhandara', 'Bhandara'), ('Bharatpur', 'Bharatpur'), ('Bharuch', 'Bharuch'), ('Bhavnagar', 'Bhavnagar'), ('Bhilwara', 'Bhilwara'), ('Bhind', 'Bhind'), ('Bhiwani', 'Bhiwani'), ('Bhojpur', 'Bhojpur'), ('Bhopal', 'Bhopal'), ('Bidar', 'Bidar'), ('Bijapur', 'Bijapur'), ('Bijnor', 'Bijnor'), ('Bikaner', 'Bikaner'), ('Bilaspur', 'Bilaspur'), ('Bilaspur', 'Bilaspur'), ('Birbhum', 'Birbhum'), ('Bishnupur', 'Bishnupur'), ('Bishwanath', 'Bishwanath'), ('Bokaro', 'Bokaro'), ('Bongaigaon', 'Bongaigaon'), ('Botad', 'Botad'), ('Boudh (Bauda)', 'Boudh (Bauda)'), ('Budaun', 'Budaun'), ('Bulandshahr', 'Bulandshahr'), ('Buldhana', 'Buldhana'), ('Bundi', 'Bundi'), ('Burhanpur', 'Burhanpur'), ('Buxar', 'Buxar'), ('Cachar', 'Cachar'), ('Chamarajnagar', 'Chamarajnagar'), ('Chamba', 'Chamba'), ('Chamoli', 'Chamoli'), ('Champawat', 'Champawat'), ('Champhai', 'Champhai'), ('Chandauli', 'Chandauli'), ('Chandel', 'Chandel'), ('Chandigarh', 'Chandigarh'), ('Chandrapur', 'Chandrapur'), ('Changlang', 'Changlang'), ('Charaideo', 'Charaideo'), ('Chatra', 'Chatra'), ('Chennai', 'Chennai'), ('Chhatarpur', 'Chhatarpur'), ('Chhindwara', 'Chhindwara'), ('Chhota Udaipur', 'Chhota Udaipur'), ('Chikkaballapur', 'Chikkaballapur'), ('Chikkamagaluru', 'Chikkamagaluru'), ('Chirang', 'Chirang'), ('Chitradurga', 'Chitradurga'), ('Chitrakoot', 'Chitrakoot'), ('Chittoor', 'Chittoor'), ('Chittorgarh', 'Chittorgarh'), ('Churachandpur', 'Churachandpur'), ('Churu', 'Churu'), ('Coimbatore', 'Coimbatore'), ('Cooch Behar', 'Cooch Behar'), ('Cuddalore', 'Cuddalore'), ('Cuttack', 'Cuttack'), ('Dadra and Nagar Haveli', 'Dadra and Nagar Haveli'), ('Dahod', 'Dahod'), ('Dakshin Dinajpur', 'Dakshin Dinajpur'), ('Dakshina Kannada', 'Dakshina Kannada'), ('Daman', 'Daman'), ('Damoh', 'Damoh'), ('Dang', 'Dang'), ('Dantewada', 'Dantewada'), ('Darbhanga', 'Darbhanga'), ('Darjeeling', 'Darjeeling'), ('Darrang', 'Darrang'), ('Datia', 'Datia'), ('Dausa', 'Dausa'), ('Davanagere', 'Davanagere'), ('Debagarh (Deogarh)', 'Debagarh (Deogarh)'), ('Dehradun', 'Dehradun'), ('Deoghar', 'Deoghar'), ('Deoria', 'Deoria'), ('Devbhoomi Dwarka', 'Devbhoomi Dwarka'), ('Dewas', 'Dewas'), ('Dhalai', 'Dhalai'), ('Dhamtari', 'Dhamtari'), ('Dhanbad', 'Dhanbad'), ('Dhar', 'Dhar'), ('Dharmapuri', 'Dharmapuri'), ('Dharwad', 'Dharwad'), ('Dhemaji', 'Dhemaji'), ('Dhenkanal', 'Dhenkanal'), ('Dholpur', 'Dholpur'), ('Dhubri', 'Dhubri'), ('Dhule', 'Dhule'), ('Dibang Valley', 'Dibang Valley'), ('Dibrugarh', 'Dibrugarh'), ('Dima Hasao', 'Dima Hasao'), ('Dimapur', 'Dimapur'), ('Dindigul', 'Dindigul'), ('Dindori', 'Dindori'), ('Diu', 'Diu'), ('Doda', 'Doda'), ('Dumka', 'Dumka'), ('Dungapur', 'Dungapur'), ('Durg', 'Durg'), ('East Champaran', 'East Champaran'), ('East Garo Hills', 'East Garo Hills'), ('East Godavari', 'East Godavari'), ('East Jaintia Hills', 'East Jaintia Hills'), ('East Kameng', 'East Kameng'), ('East Kamrup', 'East Kamrup'), ('East Khasi Hills', 'East Khasi Hills'), ('East Siang', 'East Siang'), ('East Sikkim', 'East Sikkim'), ('East Singhbhum', 'East Singhbhum'), ('Ernakulam', 'Ernakulam'), ('Erode', 'Erode'), ('Etah', 'Etah'), ('Etawah', 'Etawah'), ('Faizabad', 'Faizabad'), ('Faridabad', 'Faridabad'), ('Faridkot', 'Faridkot'), ('Farrukhabad', 'Farrukhabad'), ('Fatehabad', 'Fatehabad'), ('Fatehgarh Sahib', 'Fatehgarh Sahib'), ('Fatehpur', 'Fatehpur'), ('Fazilka', 'Fazilka'), ('Firozabad', 'Firozabad'), ('Firozpur', 'Firozpur'), ('Gadag', 'Gadag'), ('Gadchiroli', 'Gadchiroli'), ('Gajapati', 'Gajapati'), ('Ganderbal', 'Ganderbal'), ('Gandhinagar', 'Gandhinagar'), ('Ganganagar', 'Ganganagar'), ('Ganjam', 'Ganjam'), ('Garhwa', 'Garhwa'), ('Gariaband', 'Gariaband'), ('Gautam Buddh Nagar', 'Gautam Buddh Nagar'), ('Gaya', 'Gaya'), ('Ghaziabad', 'Ghaziabad'), ('Ghazipur', 'Ghazipur'), ('Gir Somnath', 'Gir Somnath'), ('Giridih', 'Giridih'), ('Goalpara', 'Goalpara'), ('Godda', 'Godda'), ('Golaghat', 'Golaghat'), ('Gomati', 'Gomati'), ('Gonda', 'Gonda'), ('Gondia', 'Gondia'), ('Gopalganj', 'Gopalganj'), ('Gorakhpur', 'Gorakhpur'), ('Gulbarga', 'Gulbarga'), ('Gumla', 'Gumla'), ('Guna', 'Guna'), ('Guntur', 'Guntur'), ('Gurdaspur', 'Gurdaspur'), ('Gurgaon', 'Gurgaon'), ('Gwalior', 'Gwalior'), ('Hailakandi', 'Hailakandi'), ('Hamirpur', 'Hamirpur'), ('Hamirpur', 'Hamirpur'), ('Hanumangarh', 'Hanumangarh'), ('Hapur (Panchsheel Nagar)', 'Hapur (Panchsheel Nagar)'), ('Harda', 'Harda'), ('Hardoi', 'Hardoi'), ('Haridwar', 'Haridwar'), ('Hassan', 'Hassan'), ('Hathras (Mahamaya Nagar)', 'Hathras (Mahamaya Nagar)'), ('Haveri', 'Haveri'), ('Hazaribag', 'Hazaribag'), ('Hingoli', 'Hingoli'), ('Hissar', 'Hissar'), ('Hojai', 'Hojai'), ('Hooghly', 'Hooghly'), ('Hoshangabad', 'Hoshangabad'), ('Hoshiarpur', 'Hoshiarpur'), ('Howrah', 'Howrah'), ('Hyderabad', 'Hyderabad'), ('Idukki', 'Idukki'), ('Imphal East', 'Imphal East'), ('Imphal West', 'Imphal West'), ('Indore', 'Indore'), ('Jabalpur', 'Jabalpur'), ('Jagatsinghpur', 'Jagatsinghpur'), ('Jaipur', 'Jaipur'), ('Jaisalmer', 'Jaisalmer'), ('Jajpur', 'Jajpur'), ('Jalandhar', 'Jalandhar'), ('Jalaun', 'Jalaun'), ('Jalgaon', 'Jalgaon'), ('Jalna', 'Jalna'), ('Jalore', 'Jalore'), ('Jalpaiguri', 'Jalpaiguri'), ('Jammu', 'Jammu'), ('Jamnagar', 'Jamnagar'), ('Jamtara', 'Jamtara'), ('Jamui', 'Jamui'), ('Janjgir-Champa', 'Janjgir-Champa'), ('Jashpur', 'Jashpur'), ('Jaunpur', 'Jaunpur'), ('Jehanabad', 'Jehanabad'), ('Jhabua', 'Jhabua'), ('Jhajjar', 'Jhajjar'), ('Jhalawar', 'Jhalawar'), ('Jhansi', 'Jhansi'), ('Jharsuguda', 'Jharsuguda'), ('Jhunjhunu', 'Jhunjhunu'), ('Jind', 'Jind'), ('Jodhpur', 'Jodhpur'), ('Jorhat', 'Jorhat'), ('Junagadh', 'Junagadh'), ('Kabirdham (formerly Kawardha)', 'Kabirdham (formerly Kawardha)'), ('Kadapa', 'Kadapa'), ('Kaimur', 'Kaimur'), ('Kaithal', 'Kaithal'), ('Kalahandi', 'Kalahandi'), ('Kamrup', 'Kamrup'), ('Kamrup Metropolitan', 'Kamrup Metropolitan'), ('Kanchipuram', 'Kanchipuram'), ('Kandhamal', 'Kandhamal'), ('Kangra', 'Kangra'), ('Kanker', 'Kanker'), ('Kannauj', 'Kannauj'), ('Kannur', 'Kannur'), ('Kanpur Dehat (Ramabai Nagar)', 'Kanpur Dehat (Ramabai Nagar)'), ('Kanpur Nagar', 'Kanpur Nagar'), ('Kanyakumari', 'Kanyakumari'), ('Kapurthala', 'Kapurthala'), ('Karaikal', 'Karaikal'), ('Karauli', 'Karauli'), ('Karbi Anglong', 'Karbi Anglong'), ('Kargil', 'Kargil'), ('Karimganj', 'Karimganj'), ('Karimnagar', 'Karimnagar'), ('Karnal', 'Karnal'), ('Karur', 'Karur'), ('Kasaragod', 'Kasaragod'), ('Kasganj (Kanshi Ram Nagar)', 'Kasganj (Kanshi Ram Nagar)'), ('Kathua', 'Kathua'), ('Katihar', 'Katihar'), ('Katni', 'Katni'), ('Kaushambi', 'Kaushambi'), ('Kendrapara', 'Kendrapara'), ('Kendujhar (Keonjhar)', 'Kendujhar (Keonjhar)'), ('Khagaria', 'Khagaria'), ('Khammam', 'Khammam'), ('Khandwa (East Nimar)', 'Khandwa (East Nimar)'), ('Khargone (West Nimar)', 'Khargone (West Nimar)'), ('Kheda', 'Kheda'), ('Khordha', 'Khordha'), ('Khowai', 'Khowai'), ('Khunti', 'Khunti'), ('Kinnaur', 'Kinnaur'), ('Kiphire', 'Kiphire'), ('Kishanganj', 'Kishanganj'), ('Kishtwar', 'Kishtwar'), ('Kodagu', 'Kodagu'), ('Koderma', 'Koderma'), ('Kohima', 'Kohima'), ('Kokrajhar', 'Kokrajhar'), ('Kolar', 'Kolar'), ('Kolasib', 'Kolasib'), ('Kolhapur', 'Kolhapur'), ('Kolkata', 'Kolkata'), ('Kollam', 'Kollam'), ('Kondagaon', 'Kondagaon'), ('Koppal', 'Koppal'), ('Koraput', 'Koraput'), ('Korba', 'Korba'), ('Koriya', 'Koriya'), ('Kota', 'Kota'), ('Kottayam', 'Kottayam'), ('Kozhikode', 'Kozhikode'), ('Kra Daadi', 'Kra Daadi'), ('Krishna', 'Krishna'), ('Krishnagiri', 'Krishnagiri'), ('Kulgam', 'Kulgam'), ('Kullu', 'Kullu'), ('Kupwara', 'Kupwara'), ('Kurnool', 'Kurnool'), ('Kurukshetra', 'Kurukshetra'), ('Kurung Kumey', 'Kurung Kumey'), ('Kushinagar', 'Kushinagar'), ('Kutch', 'Kutch'), ('Lahaul and Spiti', 'Lahaul and Spiti'), ('Lakhimpur', 'Lakhimpur'), ('Lakhimpur Kheri', 'Lakhimpur Kheri'), ('Lakhisarai', 'Lakhisarai'), ('Lakshadweep', 'Lakshadweep'), ('Lalitpur', 'Lalitpur'), ('Latehar', 'Latehar'), ('Latur', 'Latur'), ('Lawngtlai', 'Lawngtlai'), ('Leh', 'Leh'), ('Lohardaga', 'Lohardaga'), ('Lohit', 'Lohit'), ('Longding', 'Longding'), ('Longleng', 'Longleng'), ('Lower Dibang Valley', 'Lower Dibang Valley'), ('Lower Subansiri', 'Lower Subansiri'), ('Lucknow', 'Lucknow'), ('Ludhiana', 'Ludhiana'), ('Lunglei', 'Lunglei'), ('Madhepura', 'Madhepura'), ('Madhubani', 'Madhubani'), ('Madurai', 'Madurai'), ('Maharajganj', 'Maharajganj'), ('Mahasamund', 'Mahasamund'), ('Mahbubnagar', 'Mahbubnagar'), ('Mahe', 'Mahe'), ('Mahendragarh', 'Mahendragarh'), ('Mahisagar', 'Mahisagar'), ('Mahoba', 'Mahoba'), ('Mainpuri', 'Mainpuri'), ('Malappuram', 'Malappuram'), ('Maldah', 'Maldah'), ('Malkangiri', 'Malkangiri'), ('Mamit', 'Mamit'), ('Mandi', 'Mandi'), ('Mandla', 'Mandla'), ('Mandsaur', 'Mandsaur'), ('Mandya', 'Mandya'), ('Mansa', 'Mansa'), ('Mathura', 'Mathura'), ('Mau', 'Mau'), ('Mayurbhanj', 'Mayurbhanj'), ('Medak', 'Medak'), ('Meerut', 'Meerut'), ('Mehsana', 'Mehsana'), ('Mewat', 'Mewat'), ('Mirzapur', 'Mirzapur'), ('Moga', 'Moga'), ('Mokokchung', 'Mokokchung'), ('Mon', 'Mon'), ('Moradabad', 'Moradabad'), ('Morbi', 'Morbi'), ('Morena', 'Morena'), ('Morigaon', 'Morigaon'), ('Mumbai City', 'Mumbai City'), ('Mumbai suburban', 'Mumbai suburban'), ('Mungeli', 'Mungeli'), ('Munger', 'Munger'), ('Murshidabad', 'Murshidabad'), ('Muzaffarnagar', 'Muzaffarnagar'), ('Muzaffarpur', 'Muzaffarpur'), ('Mysore', 'Mysore'), ('Nabarangpur', 'Nabarangpur'), ('Nadia', 'Nadia'), ('Nagaon', 'Nagaon'), ('Nagapattinam', 'Nagapattinam'), ('Nagaur', 'Nagaur'), ('Nagpur', 'Nagpur'), ('Nainital', 'Nainital'), ('Nalanda', 'Nalanda'), ('Nalbari', 'Nalbari'), ('Nalgonda', 'Nalgonda'), ('Namakkal', 'Namakkal'), ('Namsai', 'Namsai'), ('Nanded', 'Nanded'), ('Nandurbar', 'Nandurbar'), ('Narayanpur', 'Narayanpur'), ('Narmada', 'Narmada'), ('Narsinghpur', 'Narsinghpur'), ('Nashik', 'Nashik'), ('Navsari', 'Navsari'), ('Nawada', 'Nawada'), ('Nayagarh', 'Nayagarh'), ('Neemuch', 'Neemuch'), ('Nilgiris', 'Nilgiris'), ('Nizamabad', 'Nizamabad'), ('North 24 Parganas', 'North 24 Parganas'), ('North Garo Hills', 'North Garo Hills'), ('North Goa', 'North Goa'), ('North Sikkim', 'North Sikkim'), ('North Tripura', 'North Tripura'), ('Nuapada', 'Nuapada'), ('Osmanabad', 'Osmanabad'), ('Pakur', 'Pakur'), ('Palakkad', 'Palakkad'), ('Palamu', 'Palamu'), ('Palghar', 'Palghar'), ('Pali', 'Pali'), ('Palwal', 'Palwal'), ('Panchkula', 'Panchkula'), ('Panchmahal', 'Panchmahal'), ('Panipat', 'Panipat'), ('Panna', 'Panna'), ('Papum Pare', 'Papum Pare'), ('Parbhani', 'Parbhani'), ('Paschim Medinipur', 'Paschim Medinipur'), ('Patan', 'Patan'), ('Pathanamthitta', 'Pathanamthitta'), ('Pathankot', 'Pathankot'), ('Patiala', 'Patiala'), ('Patna', 'Patna'), ('Pauri Garhwal', 'Pauri Garhwal'), ('Perambalur', 'Perambalur'), ('Peren', 'Peren'), ('Phek', 'Phek'), ('Pilibhit', 'Pilibhit'), ('Pithoragarh', 'Pithoragarh'), ('Pondicherry', 'Pondicherry'), ('Poonch', 'Poonch'), ('Porbandar', 'Porbandar'), ('Prakasam', 'Prakasam'), ('Pratapgarh', 'Pratapgarh'), ('Pratapgarh', 'Pratapgarh'), ('Pudukkottai', 'Pudukkottai'), ('Pulwama', 'Pulwama'), ('Pune', 'Pune'), ('Purba Medinipur', 'Purba Medinipur'), ('Puri', 'Puri'), ('Purnia', 'Purnia'), ('Purulia', 'Purulia'), ('Raebareli', 'Raebareli'), ('Raichur', 'Raichur'), ('Raigad', 'Raigad'), ('Raigarh', 'Raigarh'), ('Raipur', 'Raipur'), ('Raisen', 'Raisen'), ('Rajgarh', 'Rajgarh'), ('Rajkot', 'Rajkot'), ('Rajnandgaon', 'Rajnandgaon'), ('Rajouri', 'Rajouri'), ('Rajsamand', 'Rajsamand'), ('Ramanagara', 'Ramanagara'), ('Ramanathapuram', 'Ramanathapuram'), ('Ramban', 'Ramban'), ('Ramgarh', 'Ramgarh'), ('Rampur', 'Rampur'), ('Ranchi', 'Ranchi'), ('Ranga Reddy', 'Ranga Reddy'), ('Ratlam', 'Ratlam'), ('Ratnagiri', 'Ratnagiri'), ('Rayagada', 'Rayagada'), ('Reasi', 'Reasi'), ('Rewa', 'Rewa'), ('Rewari', 'Rewari'), ('Ri Bhoi', 'Ri Bhoi'), ('Rohtak', 'Rohtak'), ('Rohtas', 'Rohtas'), ('Rudraprayag', 'Rudraprayag'), ('Rupnagar', 'Rupnagar'), ('Sabarkantha', 'Sabarkantha'), ('Sagar', 'Sagar'), ('Saharanpur', 'Saharanpur'), ('Saharsa', 'Saharsa'), ('Sahibganj', 'Sahibganj'), ('Sahibzada Ajit Singh Nagar', 'Sahibzada Ajit Singh Nagar'), ('Saiha', 'Saiha'), ('Salem', 'Salem'), ('Samastipur', 'Samastipur'), ('Samba', 'Samba'), ('Sambalpur', 'Sambalpur'), ('Sambhal (Bheem Nagar)', 'Sambhal (Bheem Nagar)'), ('Sangli', 'Sangli'), ('Sangrur', 'Sangrur'), ('Sant Kabir Nagar', 'Sant Kabir Nagar'), ('Sant Ravidas Nagar', 'Sant Ravidas Nagar'), ('Saran', 'Saran'), ('Satara', 'Satara'), ('Satna', 'Satna'), ('Sawai Madhopur', 'Sawai Madhopur'), ('Sehore', 'Sehore'), ('Senapati', 'Senapati'), ('Seoni', 'Seoni'), ('Sepahijala', 'Sepahijala'), ('Seraikela Kharsawan', 'Seraikela Kharsawan'), ('Serchhip', 'Serchhip'), ('Shahdol', 'Shahdol'), ('Shahid Bhagat Singh Nagar', 'Shahid Bhagat Singh Nagar'), ('Shahjahanpur', 'Shahjahanpur'), ('Shajapur', 'Shajapur'), ('Shamli', 'Shamli'), ('Sheikhpura', 'Sheikhpura'), ('Sheohar', 'Sheohar'), ('Sheopur', 'Sheopur'), ('Shimla', 'Shimla'), ('Shimoga', 'Shimoga'), ('Shivpuri', 'Shivpuri'), ('Shopian', 'Shopian'), ('Shravasti', 'Shravasti'), ('Siang', 'Siang'), ('Siddharthnagar', 'Siddharthnagar'), ('Sidhi', 'Sidhi'), ('Sikar', 'Sikar'), ('Simdega', 'Simdega'), ('Sindhudurg', 'Sindhudurg'), ('Singrauli', 'Singrauli'), ('Sirmaur', 'Sirmaur'), ('Sirohi', 'Sirohi'), ('Sirsa', 'Sirsa'), ('Sitamarhi', 'Sitamarhi'), ('Sitapur', 'Sitapur'), ('Sivaganga', 'Sivaganga'), ('Sivasagar', 'Sivasagar'), ('Siwan', 'Siwan'), ('Solan', 'Solan'), ('Solapur', 'Solapur'), ('Sonbhadra', 'Sonbhadra'), ('Sonipat', 'Sonipat'), ('Sonitpur', 'Sonitpur'), ('South 24 Parganas', 'South 24 Parganas'), ('South Garo Hills', 'South Garo Hills'), ('South Goa', 'South Goa'), ('South Kamrup', 'South Kamrup'), ('South Salmara-Mankachar', 'South Salmara-Mankachar'), ('South Sikkim', 'South Sikkim'), ('South Tripura', 'South Tripura'), ('South West Garo Hills', 'South West Garo Hills'), ('South West Khasi Hills', 'South West Khasi Hills'), ('Sri Muktsar Sahib', 'Sri Muktsar Sahib'), ('Sri Potti Sriramulu Nellore', 'Sri Potti Sriramulu Nellore'), ('Srikakulam', 'Srikakulam'), ('Srinagar', 'Srinagar'), ('Subarnapur (Sonepur)', 'Subarnapur (Sonepur)'), ('Sukma', 'Sukma'), ('Sultanpur', 'Sultanpur'), ('Sundargarh', 'Sundargarh'), ('Supaul', 'Supaul'), ('Surajpur', 'Surajpur'), ('Surat', 'Surat'), ('Surendranagar', 'Surendranagar'), ('Surguja', 'Surguja'), ('Tamenglong', 'Tamenglong'), ('Tapi', 'Tapi'), ('Tarn Taran', 'Tarn Taran'), ('Tawang', 'Tawang'), ('Tehri Garhwal', 'Tehri Garhwal'), ('Thane', 'Thane'), ('Thanjavur', 'Thanjavur'), ('Theni', 'Theni'), ('Thiruvananthapuram', 'Thiruvananthapuram'), ('Thoothukudi', 'Thoothukudi'), ('Thoubal', 'Thoubal'), ('Thrissur', 'Thrissur'), ('Tikamgarh', 'Tikamgarh'), ('Tinsukia', 'Tinsukia'), ('Tirap', 'Tirap'), ('Tiruchirappalli', 'Tiruchirappalli'), ('Tirunelveli', 'Tirunelveli'), ('Tirupur', 'Tirupur'), ('Tiruvallur', 'Tiruvallur'), ('Tiruvannamalai', 'Tiruvannamalai'), ('Tiruvarur', 'Tiruvarur'), ('Tonk', 'Tonk'), ('Tuensang', 'Tuensang'), ('Tumkur', 'Tumkur'), ('Udaipur', 'Udaipur'), ('Udalguri', 'Udalguri'), ('Udham Singh Nagar', 'Udham Singh Nagar'), ('Udhampur', 'Udhampur'), ('Udupi', 'Udupi'), ('Ujjain', 'Ujjain'), ('Ukhrul', 'Ukhrul'), ('Umaria', 'Umaria'), ('Una', 'Una'), ('Unnao', 'Unnao'), ('Unokoti', 'Unokoti'), ('Upper Siang', 'Upper Siang'), ('Upper Subansiri', 'Upper Subansiri'), ('Uttar Dinajpur', 'Uttar Dinajpur'), ('Uttara Kannada', 'Uttara Kannada'), ('Uttarkashi', 'Uttarkashi'), ('Vadodara', 'Vadodara'), ('Vaishali', 'Vaishali'), ('Valsad', 'Valsad'), ('Varanasi', 'Varanasi'), ('Vellore', 'Vellore'), ('Vidisha', 'Vidisha'), ('Vijayapura', 'Vijayapura'), ('Viluppuram', 'Viluppuram'), ('Virudhunagar', 'Virudhunagar'), ('Visakhapatnam', 'Visakhapatnam'), ('Vizianagaram', 'Vizianagaram'), ('Warangal', 'Warangal'), ('Wardha', 'Wardha'), ('Washim', 'Washim'), ('Wayanad', 'Wayanad'), ('West Champaran', 'West Champaran'), ('West Garo Hills', 'West Garo Hills'), ('West Godavari', 'West Godavari'), ('West Jaintia Hills', 'West Jaintia Hills'), ('West Kameng', 'West Kameng'), ('West Karbi Anglong', 'West Karbi Anglong'), ('West Khasi Hills', 'West Khasi Hills'), ('West Siang', 'West Siang'), ('West Sikkim', 'West Sikkim'), ('West Singhbhum', 'West Singhbhum'), ('West Tripura', 'West Tripura'), ('Wokha', 'Wokha'), ('Yadgir', 'Yadgir'), ('Yamuna Nagar', 'Yamuna Nagar'), ('Yanam', 'Yanam'), ('Yavatmal', 'Yavatmal'), ('Zunheboto', 'Zunheboto'), ('New Delhi', 'New Delhi'), ('North Delhi', 'North Delhi'), ('North West Delhi', 'North West Delhi'), ('West Delhi', 'West Delhi'), ('South West Delhi', 'South West Delhi'), ('South Delhi', 'South Delhi'), ('South East Delhi', 'South East Delhi'), ('Central Delhi', 'Central Delhi'), ('North East Delhi', 'North East Delhi'), ('Shahdara', 'Shahdara'), ('East Delhi', 'East Delhi'), ('Other', 'Other')], max_length=150)),
                ('country', models.CharField(max_length=150)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'app_address',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=65)),
                ('middle_name', models.CharField(blank=True, max_length=65, null=True)),
                ('last_name', models.CharField(blank=True, max_length=65, null=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], default='M', max_length=1, verbose_name='Your Gender')),
                ('designation', models.CharField(choices=[('BTech', 'BTech'), ('MTech', 'MTech'), ('MTech_PHD', 'MTech_PHD'), ('MBA_PhD', 'MBA_PhD'), ('MBA', 'MBA'), ('PhD', 'PhD'), ('BME_Dual', 'BME_Dual'), ('BTech_MTech', 'BTech_MTech'), ('BTech_MBA', 'BTech_MBA')], default='Prof', max_length=8, verbose_name='Your Designation')),
                ('email', models.EmailField(max_length=50)),
                ('ldap_id', models.CharField(max_length=65)),
                ('phone_number', models.CharField(default='+91-', max_length=16, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+91-9830098300'. +91 is the country code of India.", regex='^\\+91-\\d{10}$')], verbose_name='Mobile Number')),
                ('aadhar_number', models.CharField(blank=True, max_length=14, null=True, validators=[django.core.validators.RegexValidator(message="Aadhar number must be entered in the format: '1111 1111 1111'.", regex='^\\d{4}\\s\\d{4}\\s\\d{4}$')])),
                ('phone_activated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, editable=False)),
                ('activate', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('activated_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='IEEEKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=100)),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.IEEEKeyword')),
            ],
            options={
                'verbose_name': 'IEEE Keyword',
                'verbose_name_plural': 'IEEE Keywords',
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=65)),
                ('url', models.CharField(max_length=255)),
                ('sort_order', models.IntegerField()),
                ('app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.App')),
            ],
            options={
                'ordering': ('sort_order',),
            },
        ),
        migrations.CreateModel(
            name='MenuTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(max_length=200)),
                ('link', models.CharField(max_length=200, null=True)),
                ('status', models.CharField(choices=[('R', 'Read'), ('U', 'Unread')], max_length=1)),
                ('date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='PanelMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('D', 'Draft'), ('G', 'Approved by guides'), ('N', 'Invite not sent'), ('S', 'Invite Sent'), ('A', 'Approved'), ('R', 'Rejected')], max_length=1)),
                ('priority', models.PositiveIntegerField(default=0)),
                ('created_time', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Faculty')),
            ],
            options={
                'verbose_name': 'Panel Member',
                'verbose_name_plural': 'Panel Members',
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('department', models.CharField(max_length=65)),
                ('location', models.CharField(max_length=65)),
                ('course_approval_authority', models.CharField(max_length=65)),
                ('type', models.CharField(choices=[('BTech', 'BTech'), ('MTech', 'MTech'), ('MTech_PHD', 'MTech_PHD'), ('MBA_PhD', 'MBA_PhD'), ('MBA', 'MBA'), ('PhD', 'PhD'), ('BME_Dual', 'BME_Dual'), ('BTech_MTech', 'BTech_MTech'), ('BTech_MBA', 'BTech_MBA')], max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='Referee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('I', 'Indian'), ('F', 'Foreign')], max_length=1)),
                ('university', models.CharField(max_length=100)),
                ('designation', models.CharField(max_length=100)),
                ('website', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Referee',
                'verbose_name_plural': 'Referees',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=65)),
                ('section_slug', models.CharField(max_length=65)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(max_length=2)),
            ],
            options={
                'db_table': 'indian_state',
            },
        ),
        migrations.CreateModel(
            name='StatusType',
            fields=[
                ('id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('status_message', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Status Type',
                'verbose_name_plural': 'Status Types',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=65)),
                ('middle_name', models.CharField(blank=True, max_length=65, null=True)),
                ('last_name', models.CharField(blank=True, max_length=65, null=True)),
                ('current_roll_no', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], default='M', max_length=1, verbose_name='Your Gender')),
                ('category', models.CharField(choices=[('GEN', 'General'), ('SC', 'SC'), ('ST', 'ST'), ('OBC', 'OBC - Creamy Layer'), ('OBCNC', 'OBC - Non Creamy Layer'), ('GEN-PH', 'General (PH)'), ('SC-PH', 'SC (PH)'), ('ST-PH', 'ST (PH)'), ('OBC-PH', 'OBC - Creamy Layer (PH)'), ('OBCNC-PH', 'OBC - Non Creamy Layer (PH)'), ('GEN-SP', 'General'), ('SC-SP', 'SC'), ('ST-SP', 'ST'), ('OBC-SP', 'OBC - Creamy Layer'), ('OBCNC-SP', 'OBC - Non Creamy Layer')], default='GEN', max_length=8, verbose_name='Your Category')),
                ('admission_category', models.CharField(choices=[('GEN', 'General'), ('SC', 'SC'), ('ST', 'ST'), ('OBC', 'OBC - Creamy Layer'), ('OBCNC', 'OBC - Non Creamy Layer'), ('GEN-PH', 'General (PH)'), ('SC-PH', 'SC (PH)'), ('ST-PH', 'ST (PH)'), ('OBC-PH', 'OBC - Creamy Layer (PH)'), ('OBCNC-PH', 'OBC - Non Creamy Layer (PH)'), ('GEN-SP', 'General'), ('SC-SP', 'SC'), ('ST-SP', 'ST'), ('OBC-SP', 'OBC - Creamy Layer'), ('OBCNC-SP', 'OBC - Non Creamy Layer')], default='GEN', max_length=8, verbose_name='Admission Category')),
                ('admission_channel', models.CharField(max_length=25)),
                ('sponsored', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, editable=False)),
                ('email', models.EmailField(max_length=50)),
                ('ldap_id', models.CharField(max_length=65)),
                ('phone_number', models.CharField(default='+91-', max_length=16, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+91-9830098300'. +91 is the country code of India.", regex='^\\+91-\\d{10}$')], verbose_name='Mobile Number')),
                ('aadhar_number', models.CharField(blank=True, max_length=14, null=True, validators=[django.core.validators.RegexValidator(message="Aadhar number must be entered in the format: '1111 1111 1111'.", regex='^\\d{4}\\s\\d{4}\\s\\d{4}$')])),
                ('phone_activated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, editable=False)),
                ('activated', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, editable=False)),
                ('created_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('activated_on', models.DateTimeField(blank=True, editable=False, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('current_batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.AdmissionBatch', verbose_name='Batch')),
            ],
        ),
        migrations.CreateModel(
            name='Thesis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('abstract', models.TextField(max_length=500, null=True)),
                ('synopsis', models.FileField(null=True, upload_to='Synopsis')),
                ('thesis', models.FileField(null=True, upload_to='Thesis')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.StatusType')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Student')),
            ],
            options={
                'verbose_name': 'Thesis',
                'verbose_name_plural': 'Thesis',
            },
        ),
        migrations.CreateModel(
            name='ThesisGuide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('G', 'Guide'), ('C', 'Co-Guide')], max_length=1)),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Faculty')),
                ('thesis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Thesis')),
            ],
            options={
                'verbose_name': 'Thesis Guide',
                'verbose_name_plural': 'Thesis Guides',
            },
        ),
        migrations.CreateModel(
            name='ThesisGuideApproval',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('A', 'Abstract'), ('S', 'Synopsis'), ('T', 'Thesis')], max_length=1)),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Faculty')),
                ('thesis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Thesis')),
            ],
            options={
                'verbose_name': 'Thesis Guide Approval',
                'verbose_name_plural': 'Thesis Guide Approvals',
            },
        ),
        migrations.CreateModel(
            name='ThesisKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.IEEEKeyword')),
                ('thesis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Thesis')),
            ],
            options={
                'verbose_name': 'Thesis Keyword',
                'verbose_name_plural': 'Thesis Keywords',
            },
        ),
        migrations.CreateModel(
            name='ThesisLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('status_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.StatusType')),
                ('thesis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Thesis')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], max_length=1)),
                ('salutation', models.CharField(choices=[('Prof.', 'Professor'), ('Dr.', 'Dr'), ('Mr.', 'Mr'), ('Ms.', 'Ms'), ('Mrs.', 'Mrs')], max_length=12)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('menu_template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.MenuTemplate')),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='section',
            name='section_head',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referee',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='panelmember',
            name='referee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Referee'),
        ),
        migrations.AddField(
            model_name='panelmember',
            name='thesis',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Thesis'),
        ),
        migrations.AddField(
            model_name='notification',
            name='receiver',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='notification',
            name='sender',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='menu',
            name='menu_templates',
            field=models.ManyToManyField(to='app.MenuTemplate'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communicationaddress',
            name='referee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Referee'),
        ),
        migrations.AddField(
            model_name='communicationaddress',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.State'),
        ),
        migrations.AddField(
            model_name='communicationaddress',
            name='updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='approver',
            name='faculty',
            field=models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Faculty'),
        ),
        migrations.AddField(
            model_name='app',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.Section'),
        ),
        migrations.AddField(
            model_name='admissionbatch',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.Program'),
        ),
        migrations.AlterUniqueTogether(
            name='thesiskeyword',
            unique_together=set([('thesis', 'keyword')]),
        ),
        migrations.AlterUniqueTogether(
            name='communicationaddress',
            unique_together=set([('type', 'referee')]),
        ),
    ]
